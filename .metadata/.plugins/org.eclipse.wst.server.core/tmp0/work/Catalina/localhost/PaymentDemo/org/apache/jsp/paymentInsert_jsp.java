/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-10-25 14:08:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class paymentInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/payment.css\">	<!-- link payment css file -->\r\n");
      out.write("  <script>function showMessage() {\r\n");
      out.write("    alert(\"Your form has been submitted successfully!\");		<!-- show pop up message when the form is submitted using java script -->\r\n");
      out.write("}\r\n");
      out.write("	</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write(" <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <form action=\"PaymentInsert\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("\r\n");
      out.write("                <h3 class=\"title\">billing address</h3>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>full name :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"fname\" placeholder=\"Jennie Maxwell\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>email :</span>\r\n");
      out.write("                    <input type=\"email\" name=\"email\" placeholder=\"jennie@example.com\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>address :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"address\" placeholder=\"No 35/1,Townhill,Kandy\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>city :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"city\" placeholder=\"Kandy\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"flex\">\r\n");
      out.write("                    <div class=\"inputBox\">\r\n");
      out.write("                        <span>Province:</span>\r\n");
      out.write("                        <input type=\"text\" name=\"province\" placeholder=\"Central\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"inputBox\">\r\n");
      out.write("                        <span>Zip code :</span>\r\n");
      out.write("                        <input type=\"text\" name=\"zipcode\" placeholder=\"20160\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("\r\n");
      out.write("                <h3 class=\"title\">payment</h3>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>cards accepted :</span>\r\n");
      out.write("                        <img src=\"images/card_img.png\" alt=\"card\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>name on card :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"cname\" placeholder=\"Jennie Maxwell\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>Card number :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"cnumber\" placeholder=\"1234-3212-4563-3221\" pattern=\"[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]\"><!-- add validation to the card number-->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"inputBox\">\r\n");
      out.write("                    <span>Valid through :</span>\r\n");
      out.write("                    <input type=\"text\" name=\"valid\" placeholder=\"(MM/YY)\" pattern=\"(0[1-9]|1[0-2])\\/[0-9]{2}\">	<!--add validation to the expiration date -->\r\n");
      out.write("                </div>\r\n");
      out.write("			 <div class=\"flex\">\r\n");
      out.write("                    <div class=\"inputBox\">\r\n");
      out.write("                        <span>CVV(3 Digits) :</span>\r\n");
      out.write("                        <input type=\"text\" name=\"cvv\" placeholder=\"123\" pattern=\"[0-9][0-9][0-9]\">	<!-- add validation to the CVV -->\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("    \r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"Pay\" class=\"submit-btn\" name=\"submit\" onclick=\"showMessage()\"> 	<!-- show the pop up message when click on the Pay button-->\r\n");
      out.write("  \r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("</div>    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
